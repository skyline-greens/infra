---
# ConfigMap for non-sensitive configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: verdant
data:
  BROKER_URL: "mqtt://mosquitto:1883"
  DATABASE_URL: "postgresql://verdant:verdant2025@db:5432/verdant_db"
  NODE_ENV: "production"
  POSTGRES_DB: "verdant_db"
  POSTGRES_USER: "verdant"

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: verdant
type: Opaque
data:
  ACCESS_JWT_SECRET: dmVyZGFudC1zZWNyZXQ=  # base64 encoded "verdant-secret"
  REFRESH_JWT_SECRET: YW5vdGhlci12ZXJkYW50LXNlY3JldA==  # base64 encoded "another-verdant-secret"
  POSTGRES_PASSWORD: dmVyZGFudDIwMjU=  # base64 encoded "verdant2025"

---
# PersistentVolume for PostgreSQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /data/postgresql

---
# PersistentVolumeClaim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: verdant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: verdant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: verdant
spec:
  selector:
    app: db
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

