# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: verdant
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-db
        image: postgres:latest
        command: ['sh', '-c', 'until pg_isready -h db -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
      - name: backend
        image: ymerzouka/verdant-backend:latest # Replace with your actual image
        ports:
        - containerPort: 8000
        env:
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BROKER_URL
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: NODE_ENV
        - name: ACCESS_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: ACCESS_JWT_SECRET
        - name: REFRESH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: REFRESH_JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: verdant
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP


