# Backend Deployment with Integrated Seeding
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-db
        image: postgres:latest
        command: ['sh', '-c', 'until pg_isready -h db -p 5432; do echo "Waiting for database..."; sleep 2; done; echo "Database is ready!"']
      - name: run-seeder
        image: ymerzouka/verdant-seed:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        resources:
          requests:
            memory: "128Mi"
            cpu: "150m"
          limits:
            memory: "256Mi"
            cpu: "300m"
      containers:
      - name: backend
        image: ymerzouka/verdant-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BROKER_URL
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: NODE_ENV
        - name: ACCESS_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: ACCESS_JWT_SECRET
        - name: REFRESH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: REFRESH_JWT_SECRET
        - name: MQTT_ID_PREFIX
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MQTT_ID_PREFIX
        - name: MQTT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MQTT_USERNAME
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5 # Consider increasing if seeding takes time and affects readiness
          periodSeconds: 5
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
